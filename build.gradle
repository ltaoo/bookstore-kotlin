/*
 * 最简 ktor 打包配置
 * @url: http://ktor.io/quickstart/gradle.html
 */
group 'Example'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.1.51'
    // 2、指定 ktor 版本
    ext.ktor_version = '0.9.0'

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'

sourceCompatibility = 1.8

repositories {
    jcenter()

    // 1、增加 ktor 仓库？
    maven { url "http://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    // 3、在这里添加 ktor 核心？
    compile "io.ktor:ktor-server-core:$ktor_version"
    // 6、添加运行环境依赖
    compile "io.ktor:ktor-server-netty:$ktor_version"
    // 7、增加 logger 依赖
    compile "ch.qos.logback:logback-classic:1.2.1"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

// 5、指定编译生成 java8 字节码？
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

// 声明一个任务下载所有依赖放到 libs 文件夹下
task downloadJars(type: Copy) {
  from configurations.runtime
  into 'libs' // 目标位置
}

mainClassName = "blog.BlogAppKt"

// 4、
kotlin {
    experimental {
        coroutines "enable"
    }
}